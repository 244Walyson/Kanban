apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pv-claim
  namespace: kanban
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 2Gi

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mongo-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mongo
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: kanban
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo:latest
        command: ["mongod"]
        args: ["--dbpath", "/data/db", "--bind_ip_all"]  
        env:
          - name: MONGO_INITDB_ROOT_USERNAME
            valueFrom:
              secretKeyRef:
                name: mongo-secret
                key: DB_USERNAME
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongo-secret
                key: DB_PASSWORD
        resources:
          limits:
            memory: "300Mi"
            cpu: "600m"
        volumeMounts:
          - name: mongo-persistent-storage
            mountPath: /data/db
      volumes:
        - name: mongo-persistent-storage
          persistentVolumeClaim:
            claimName: mongo-pv-claim

---

apiVersion: v1
kind: Service
metadata:
  name: mongo-service 
  namespace: kanban
  labels:
    app: mongo
    namespace: kanban
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
    nodePort: 32000
  selector:
    app: mongo
  type: NodePort
status:
  loadBalancer: {}



---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mongo-ingress
  namespace: kanban
  labels:
    name: mongo-ingress
spec:
  rules:
    - host: mongo.rancher.waly.dev.br
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: mongo-service
                port: 
                  number: 27017

