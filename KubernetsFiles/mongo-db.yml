
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pv-claim
  namespace: kanban
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: mongo-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mongo-db
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: kanban
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:latest
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: root
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: my-secret
                  key: DB_PASSWORD
          resources:
            limits:
              memory: "300Mi"
              cpu: "600m"
          volumeMounts:
            - name: mongo-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mongo-persistent-storage
          persistentVolumeClaim:
            claimName: mongo-pv-claim


---

apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: kanban
spec:
  selector:
    app: mongo
  ports:
  - port: 27017
    targetPort: 27017

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mongo-ingress
  namespace: kanban
  labels:
    name: mongo-ingress
spec:
  rules:
  - host: mongo.rancher.waly.dev.br
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: mysql-service
            port: 
              number: 27017