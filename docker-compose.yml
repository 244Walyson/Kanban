version: '3'
services:

  kanban-db:
    container_name: kanban-db
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: kanban
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_USER: admin
      MYSQL_PASSWORD: 123456
    ports:
      - "3307:3306"
    networks:
      - kanban
    
  kafka:
    container_name: kafka-kanban
    image: 'bitnami/kafka:latest'
    environment:
    - KAFKA_CFG_NODE_ID=0
    - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
    - KAFKA_CFG_PROCESS_ROLES=controller,broker
    - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
    - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
    - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    ports:
    - 9094:9094
    networks:
      - kanban

  kafka-connect:
    container_name: kafka-connect
    image: confluentinc/cp-kafka-connect:7.5.4
    restart: always
    depends_on:
      - kafka
      - kanban-db
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components,/data/connect-jars,/etc/kafka-connect/jars
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_LOG4J_LOGGERS: org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR
    ports:
      - 8083:8083
    command: 
      - bash
      - -c
      - |
        echo "Installing JDBC driver"
        confluent-hub install debezium/debezium-connector-mysql:latest --no-prompt
        confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:10.2.0
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run
    networks:
      - kanban
  
  redpanda-console:
    container_name: redpanda-kanban
    image: docker.redpanda.com/vectorized/console:latest
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    ports:
      - 8084:8080
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka:9092"]
    depends_on:
      - kafka 
    networks:
      - kanban

  
  chat-db:
    container_name: chat-db
    image: mongo:latest
    restart: always
    environment:
      MONGO_INITDB_DATABASE: chat-db
    ports:
      - "27019:27017"
    networks:
      - kanban

  chat:
    build: ./chat
    #image: walymb/chat:latest
    container_name: chat
    ports:
      - "8090:8090"
    depends_on:
      - chat-db
      - kafka
      - kafka-connect
    environment:
      - MONGO_DB_URI=mongodb://chat-db:27017/chat-db
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - JWK_SET_URI=http://kanban:9090/.well-known/jwks.json
      - FIREBASE_CONFIG_FILE=./fcm-key.json
    volumes:
      - ./fcm-key.json:/app/fcm-key.json
    networks:
      - kanban


  kanban:
    build: ./kanban
    #image: walymb/kanbanapp:latest
    container_name: kanban
    ports:
      - "9090:9090"
    depends_on:
      - kafka
      - kafka-connect
      - kanban-db
    environment:
      - DB_HOST=kanban-db
      - DB_PORT=3306
      - DB_NAME=kanban
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - kanban

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      #- 80:80
      #- 443:443
      - 9091:80
    networks:
      - kanban

networks:
  kanban:
    driver: bridge