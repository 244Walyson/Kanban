apiVersion: v1
kind: Namespace
metadata:
  name: kanban

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kanban-db
  namespace: kanban
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kanban-db
  template:
    metadata:
      labels:
        app: kanban-db
    spec:
      containers:
      - name: kanban-db
        image: mysql:latest
        env:
          - name: MYSQL_DATABASE
            value: kanban
          - name: MYSQL_ROOT_PASSWORD
            value: "123456"
          - name: MYSQL_USER
            value: admin
          - name: MYSQL_PASSWORD
            value: "123456"
        ports:
        - containerPort: 3306

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-db
  namespace: kanban
spec:
  selector:
    matchLabels:
      app: chat-db
  template:
    metadata:
      labels:
        app: chat-db
    spec:
      containers:
      - name: chat-db
        image: mongo:latest
        ports:
        - containerPort: 27017

---

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: kafka
#   namespace: kanban
# spec:
#   selector:
#     matchLabels:
#       app: kafka
#   template:
#     metadata:
#       labels:
#         app: kafka
#     spec:
#       containers:
#       - name: kafka
#         image: 'bitnami/kafka:latest'
#         env:
#           - name: KAFKA_CFG_NODE_ID
#             value: "0"
#           - name: KAFKA_CFG_ADVERTISED_LISTENERS
#             value: PLAINTEXT://kafka:9092
#           - name: KAFKA_CFG_PROCESS_ROLES
#             value: controller,broker
#           - name: KAFKA_CFG_LISTENERS
#             value: PLAINTEXT://:9092,CONTROLLER://:9093
#           - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
#             value: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
#           - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
#             value: 0@kafka:9093
#           - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
#             value: CONTROLLER
#         ports:
#         - containerPort: 9092
#         - containerPort: 9093


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-connect
  namespace: kanban
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-connect
  template:
    metadata:
      labels:
        app: kafka-connect
    spec:
      containers:
      - name: kafka-connect
        image: confluentinc/cp-kafka-connect:7.5.4
        ports:
        - containerPort: 8083
        env:
        - name: CONNECT_BOOTSTRAP_SERVERS
          value: kafka:9092
        - name: CONNECT_REST_ADVERTISED_HOST_NAME
          value: kafka-connect
        - name: CONNECT_REST_PORT
          value: "8083"
        - name: CONNECT_GROUP_ID
          value: kafka-connect-group
        - name: CONNECT_CONFIG_STORAGE_TOPIC
          value: connect-configs
        - name: CONNECT_OFFSET_STORAGE_TOPIC
          value: connect-offsets
        - name: CONNECT_STATUS_STORAGE_TOPIC
          value: connect-status
        - name: CONNECT_KEY_CONVERTER
          value: org.apache.kafka.connect.json.JsonConverter
        - name: CONNECT_VALUE_CONVERTER
          value: org.apache.kafka.connect.json.JsonConverter
        - name: CONNECT_INTERNAL_KEY_CONVERTER
          value: org.apache.kafka.connect.json.JsonConverter
        - name: CONNECT_INTERNAL_VALUE_CONVERTER
          value: org.apache.kafka.connect.json.JsonConverter
        command:
        - bash
        - -c
        - |
          echo "Installing JDBC driver"
          confluent-hub install debezium/debezium-connector-mysql:latest --no-prompt
          confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:10.2.0
          echo "Launching Kafka Connect worker"
          /etc/confluent/docker/run

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redpanda-console
  namespace: kanban
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redpanda-console
  template:
    metadata:
      labels:
        app: redpanda-console
    spec:
      containers:
      - name: redpanda-console
        image: docker.redpanda.com/vectorized/console:latest
        ports:
        - containerPort: 8080
        command: ["sh", "-c", "echo \"$CONSOLE_CONFIG_FILE\" > /tmp/config.yml && /app/console"]
        env:
        - name: KAFKA_SASL_ENABLED
          value: "true"
        - name: KAFKA_SASL_USERNAME
          value: "user1"  # Nome de usu√°rio do Kafka
        - name: KAFKA_SASL_PASSWORD
          value: "Y09AsxwIf3"  # Senha do Kafka
        - name: CONFIG_FILEPATH
          value: /tmp/config.yml
        - name: CONSOLE_CONFIG_FILE
          value: |
            kafka:
              brokers: ["kafka.kanban.svc.cluster.local:9092"]

---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-deployment
  namespace: kanban
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chat
  template:
    metadata:
      labels:
        app: chat
    spec:
      containers:
      - name: chat
        image: walymb/chat:latest
        ports:
        - containerPort: 8090
        env:
        - name: MONGO_DB_URI
          value: mongodb://chat-db:27017/chat-db
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: kafka:9092
        - name: JWK_SET_URI
          value: http://kanban:9090/.well-known/jwks.json
      restartPolicy: Always

---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: kanban-deployment
  namespace: kanban
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kanban
  template:
    metadata:
      labels:
        app: kanban
    spec:
      containers:
      - name: kanban
        image: walymb/kanbanapp:latest
        ports:
        - containerPort: 9090
        env:
        - name: DB_HOST
          value: kanban-db
        - name: DB_PORT
          value: "3306"
        - name: DB_NAME
          value: kanban
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: kafka.kanban.svc.cluster.local:9092
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: kanban-db
  namespace: kanban
spec:
  selector:
    app: kanban-db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306

---

apiVersion: v1
kind: Service
metadata:
  name: chat-db
  namespace: kanban
spec:
  selector:
    app: chat-db
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017



# apiVersion: v1
# kind: Service
# metadata:
#   name: kafka
#   namespace: kanban
# spec:
#   selector:
#     app: kafka
#   ports:
#     - protocol: TCP
#       port: 9092
#       targetPort: 9092

#kafka.kanban.svc.cluster.local:9092
---

apiVersion: v1
kind: Service
metadata:
  name: kafka-connect
  namespace: kanban
spec:
  selector:
    app: kafka-connect
  ports:
    - protocol: TCP
      port: 8083
      targetPort: 8083

---

apiVersion: v1
kind: Service
metadata:
  name: redpanda-console
  namespace: kanban
spec:
  selector:
    app: redpanda-console
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---

apiVersion: v1
kind: Service
metadata:
  name: chat
  namespace: kanban
spec:
  selector:
    app: chat
  ports:
    - protocol: TCP
      port: 8090
      targetPort: 8090

---

apiVersion: v1
kind: Service
metadata:
  name: kanban
  namespace: kanban
spec:
  selector:
    app: kanban
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090


---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-kanban
  namespace: kanban
spec:
  rules:
  - host: kanban.rancher.waly.dev.br
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kanban
            port:
              number: 9090
  ingressClassName: nginx

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-chat
  namespace: kanban
spec:
  rules:
  - host: chat.rancher.waly.dev.br
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: chat
            port:
              number: 8090
  ingressClassName: nginx

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-chat
  namespace: kanban
spec:
  rules:
  - host: mongodb.rancher.waly.dev.br
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: chat-db
            port:
              number: 27017
  ingressClassName: nginx

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-chat
  namespace: kanban
spec:
  rules:
  - host: redpanda.rancher.waly.dev.br
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: redpanda-console
            port:
              number: 8080
  ingressClassName: nginx

---


apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-chat
  namespace: kanban
spec:
  rules:
  - host: redpanda.rancher.waly.dev.br
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kanban-db
            port:
              number: 3306
  ingressClassName: nginx



###NGINX CONFIGS

  ###kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml
### export NGINX_INGRESS_IP=$(kubectl -n ingress-nginx get service ingress-nginx-controller -o jsonpath='{.status.loadBalancer.ingress[0].ip}')